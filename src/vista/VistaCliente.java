/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.ClienteController;
import controlador.GUIController;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Cliente;

/**
 *
 * @author EFRA
 */
public class VistaCliente extends javax.swing.JPanel {
private final Object cols[] = {"Código", "Nombre", "Saldo"};
private DefaultTableModel table = new DefaultTableModel(cols, 0);
    /**
     * Creates new form FormTarjeta
     */
    public VistaCliente() {
        initComponents();
        clientesTabla.setModel(table);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        clientesTabla = new javax.swing.JTable();
        agregarClienteBtn = new javax.swing.JButton();
        actualizarTablaBtn = new javax.swing.JButton();
        editarClienteBtn = new javax.swing.JButton();
        depositarBtn = new javax.swing.JButton();
        retirarBtn = new javax.swing.JButton();
        borrarClienteBtn = new javax.swing.JButton();

        jLabel1.setText("Buscar por nombre:");

        searchTextField.setToolTipText("Escriba un nombre");
        searchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextFieldActionPerformed(evt);
            }
        });
        searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyTyped(evt);
            }
        });

        clientesTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nombre", "Saldo"
            }
        ));
        jScrollPane1.setViewportView(clientesTabla);

        agregarClienteBtn.setText("Agregar Cliente");
        agregarClienteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarClienteBtnActionPerformed(evt);
            }
        });

        actualizarTablaBtn.setText("Actualizar Tabla");
        actualizarTablaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarTablaBtnActionPerformed(evt);
            }
        });

        editarClienteBtn.setText("Editar Cliente");
        editarClienteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarClienteBtnActionPerformed(evt);
            }
        });

        depositarBtn.setText("Depositar");
        depositarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depositarBtnActionPerformed(evt);
            }
        });

        retirarBtn.setText("Retirar");
        retirarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retirarBtnActionPerformed(evt);
            }
        });

        borrarClienteBtn.setText("Borrar Cliente");
        borrarClienteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarClienteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(borrarClienteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(retirarBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                            .addComponent(agregarClienteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(actualizarTablaBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 5, Short.MAX_VALUE))
                    .addComponent(editarClienteBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(depositarBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(agregarClienteBtn)
                .addGap(4, 4, 4)
                .addComponent(actualizarTablaBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editarClienteBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(depositarBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(retirarBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(borrarClienteBtn)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTextFieldActionPerformed

    private void actualizarTablaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarTablaBtnActionPerformed
      loadTable();
    }//GEN-LAST:event_actualizarTablaBtnActionPerformed

    private void searchTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyTyped
       loadTable();
    }//GEN-LAST:event_searchTextFieldKeyTyped

    private void agregarClienteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarClienteBtnActionPerformed
        GUIController.runFormCliente();
    }//GEN-LAST:event_agregarClienteBtnActionPerformed
    
    private void editarClienteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarClienteBtnActionPerformed
        Cliente toEdit = getSelectedClient();
                if (toEdit != null) {
                    FormCliente edit = new FormCliente(toEdit);
                    edit.setVisible(true);
                } else JOptionPane.showMessageDialog(this, "Seleccione un cliente en la tabla");
            
       
                
    }//GEN-LAST:event_editarClienteBtnActionPerformed

    private void depositarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depositarBtnActionPerformed
       Cliente cliente = getSelectedClient();
       try{
           if (cliente != null) {
                    String monto = JOptionPane.showInputDialog(this, "Ingrese cantidad a consignar");
                    JOptionPane.showMessageDialog(this, "Saldo agregado, el nuevo saldo es: " +
                            cliente.addSaldo(Double.parseDouble(monto)));
                    loadTable();
                } else JOptionPane.showMessageDialog(this, "Seleccione un cliente en la tabla");
           }  catch(NumberFormatException e){
          JOptionPane.showMessageDialog(this, e.getMessage());
      }
                
    }//GEN-LAST:event_depositarBtnActionPerformed

    private void borrarClienteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarClienteBtnActionPerformed
Cliente eliminar = getSelectedClient();
                if (eliminar != null) {
                    int dialogResult = JOptionPane.showConfirmDialog(this,
                            "Seguro que desea borrar este cliente?", "Warning", 1);
                    if (dialogResult == JOptionPane.YES_OPTION) {
                        int idRow = clientesTabla.getSelectedRow();
                        String elminado = ClienteController.eliminarCliente(
                                eliminar.getCodigo()
                        );
                        JOptionPane.showMessageDialog(this, elminado);
                        table.removeRow(idRow);
                    }

                } else JOptionPane.showMessageDialog(this, "Seleccione un cliente en la tabla");  
    }//GEN-LAST:event_borrarClienteBtnActionPerformed

    private void retirarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retirarBtnActionPerformed
        Cliente cliente = getSelectedClient();
        
        try{
                if (cliente != null) {
                    String monto = JOptionPane.showInputDialog(this, "Ingrese cantidad a retirar");
                    Double nuevoSaldo = cliente.retirarSaldo(Double.parseDouble(monto));

                    if (nuevoSaldo != null) {
                        JOptionPane.showMessageDialog(this, "Retiro realizado, el nuevo saldo es: " +
                                nuevoSaldo);
                        loadTable();
                    } else {
                        JOptionPane.showMessageDialog(this, "Fondos insuficientes");
                    }
                } else JOptionPane.showMessageDialog(this, "Seleccione un cliente en la tabla");
                
        }catch(NumberFormatException e){
          JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_retirarBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizarTablaBtn;
    private javax.swing.JButton agregarClienteBtn;
    private javax.swing.JButton borrarClienteBtn;
    private javax.swing.JTable clientesTabla;
    private javax.swing.JButton depositarBtn;
    private javax.swing.JButton editarClienteBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton retirarBtn;
    private javax.swing.JTextField searchTextField;
    // End of variables declaration//GEN-END:variables

    private void loadTable() {
         String busqueda = searchTextField.getText();
        {
            List<Cliente> buscados = ClienteController.buscarCliente(busqueda.toLowerCase());

            table.setRowCount(0);
            buscados.forEach((c) -> {
                if (table.getRowCount() < 10)
                    table.addRow(c.toTableRow());
                
            });
            
    }
    }

    private Cliente getSelectedClient() {
         int idRow = clientesTabla.getSelectedRow();
        if (idRow != -1) {
            Cliente cliente = ClienteController.buscarCliente(
                    Integer.parseInt(table.getValueAt(idRow, 0).toString())
            );
            return cliente;
        } else return null;
    }
}
